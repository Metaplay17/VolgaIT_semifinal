openapi: 3.0.0
info:
  title: Simbir.GO API
  version: 1.0.0
servers:
  - url: http://127.0.0.1:5000/api
    description: "Test Dev Server"
paths:
  "/Account/Me":
    get:
      summary: Retrieve account information
      tags:
        - Account
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Got user data
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  username:
                    type: string
                  password:
                    type: string
                  privilege:
                    type: string
        '401':
          description: Unauthorized
  "/Account/SignIn":
    post:
      summary: Sign In
      tags:
      - Account
      requestBody:
        required: True
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Got JWT token
        '404':
          description: Incorrect data
        '403':
          description: You have already authorized
  "/Account/SignUp":
    post:
      summary: Create new account
      tags:
      - Account
      requestBody:
        required: True
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: New user created
        '409':
          description: Username is already used
          
  "/Account/SignOut":
    post:
      summary: Make token be not valid
      tags:
      - Account
      security:
      - BearerAuth: []
      responses:
        '200':
          description: Token was made not valid
        '401':
          description: Token already is not valid/not authorized
  "/Account/Update":
    put:
      summary: Update account data
      tags:
      - Account
      security:
      - BearerAuth: []
      requestBody:
        required: True
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Account have been successful updated
        '409':
          description: Username is already used
        '401':
          description: Token already is not valid/not authorized
  "/Transport/{id}":
    get:
      parameters:
      - name: id
        in: path
        required: True
        schema:
          type: string
      summary: Get transport data by id
      tags:
      - Transport
      responses:
        "200":
          description: Successfully got transport data
        "404":
          description: This transport is not found
    put:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      summary: Update transport data by id
      tags:
      - Transport
      security:
      - BearerAuth: []
      requestBody:
        required: True
        content:
          application/json:
            schema:
              type: object
              properties:
                canBeRented:
                  type: boolean
                transportType:
                  type: string
                model:
                  type: string
                color:
                  type: string
                identifier:
                  type: string
                description:
                  type: string
                latitude:
                  type: number
                  format: float
                longitude:
                  type: number
                  format: float
                minutePrice:
                  type: number
                  format: float
                dayPrice:
                  type: number
                  format: float
      responses:
        '200':
          description: Transport updated successfully
        '403':
          description: You are not transport's owner
        '401':
          description: Not valid token/not authorized
    delete:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      summary: Delete transport by id
      tags:
      - Transport
      security:
      - BearerAuth: []
      responses:
        '200':
          description: Transport was deleted successfully
        '403':
          description: You are not transport's owner
        '404':
          description: This transport not found
  "/Transport":
    post:
      summary: Add new transport to database
      tags:
      - Transport
      security:
      - BearerAuth: []
      requestBody:
        required: True
        content:
          application/json:
            schema:
              type: object
              properties:
                canBeRented:
                  type: boolean
                transportType:
                  type: string
                model:
                  type: string
                color:
                  type: string
                identifier:
                  type: string
                description:
                  type: string
                latitude:
                  type: number
                  format: float
                longitude:
                  type: number
                  format: float
                minutePrice:
                  type: number
                  format: float
                dayPrice:
                  type: number
                  format: float
      responses:
        "200":
          description: Transport added
        "401":
          description: Not valid token/not authorized
    
  "/Rent/Transport":
    get:
      summary: Get Available transport
      tags:
      - Rent
      parameters:
      - name: lat
        in: header
        schema:
          type: number
          format: float
      - name: long
        in: header
        schema:
          type: number
          format: float
      - name: type
        in: header
        schema:
          type: string
      - name: radius
        in: header
        schema:
          type: number
          format: float
      responses:
        '200':
          description: List of available transport (may be empty)
  "/Rent/{rent_id}":
    get:
      parameters:
      - name: rent_id
        in: path
        required: true
        schema:
          type: string
      summary: Get rent data by id
      tags:
      - Rent
      security:
      - BearerAuth: []
      responses:
        "200":
          description: Rent data
        "401": 
          description: Not valid token/not authorized
        "403":
          description: You are not transport's owner or rentor
        "404":
          description: Rent not found
  "/Rent/MyHistory":
    get:
      summary: Get current user's rent history
      tags:
      - Rent
      security:
      - BearerAuth: []
      responses:
        "200":
          description: user's rent history
        "401":
          description: not valid token/not authorized
  "/Rent/TransportHistory/{transport_id}":
    get:
      parameters:
      - name: transport_id
        required: true
        in: path
        schema:
          type: string
      summary: Get transport rent history by id
      tags:
      - Rent
      security:
      - BearerAuth: []
      responses:
        "200":
          description: Get transport rent history
        "404":
          description: This transport not found
        "403":
          description: You are not transport owner or rentor
      
          
  "/Rent/New/{transport_id}":
    post:
      parameters:
      - name: transport_id
        in: path
        required: true
        schema:
          type: string
      summary: Rent transport by id
      tags:
      - Rent
      security:
      - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rentType:
                  type: string
      responses:
        "200":
          description: Transport rented successfully
        "401":
          description: Not valid token/not authorized
        "403":
          description: This transport can not be rented
        "400":
          description: Bad Request (Wrong rent type)
  "/Rent/End/{rent_id}":
    post:
      summary: End rent by id
      tags:
      - Rent
      security:
      - BearerAuth: []
      parameters:
      - name: rent_id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lat:
                  type: number
                  format: float
                long:
                  type: number
                  format: float
      responses:
        "200":
          description: Rent successfully ended
        "404":
          description: This rent not found
        "403":
          description: You are not renter
        "401":
          description: Not valid token/not authorized
  "/Payment/Hesoyam/{account_id}":
    post:
      summary: Add 250000 to current balance
      tags:
      - Payment
      security:
      - BearerAuth: []
      parameters:
      - name: account_id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successfully added
        "403":
          description: You can not add money not to yourself
        "404":
          description: Account not found
  "/Admin/Account":
    get:
      summary: Get all accounts
      tags:
      - Admin
      - Account
      security:
      - BearerAuth: []
      parameters:
      - name: start
        in: header
        required: true
        schema:
          type: integer
      - name: count
        in: header
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: List ofaccounts
        "401":
          description: Not valid token/not authorized
        "403":
          description: You are not admin
    post:
      summary: Create account
      tags:
      - Admin
      - Account
      security:
      - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                isAdmin:
                  type: boolean
                balance:
                  type: number
                  format: float
      responses:
        "200":
          description: Account was created
        "401":
          description: Not valid token/not authorized
        "403":
          description: You are not admin
        "409":
          description: Username is already used
        
                
            
      
  "/Admin/Account/{user_id}":
    get:
      summary: Get account data by id
      tags:
      - Admin
      - Account
      security:
      - BearerAuth: []
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Account's data
        "401":
          description: Not valid token/not authorized
        "403":
          description: You are not admin
        "404":
          description: Account not found
    put:
      summary: Change account data by id
      tags:
      - Admin
      - Account
      security:
      - BearerAuth: []
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                isAdmin:
                  type: boolean
                balance:
                  type: number
                  format: float
      responses:
        "200":
          description: Account was changed
        "401":
          description: Not valid token/not authorized
        "403":
          description: You are not admin
        "404":
          description: Account not found
        "409":
          description: Username is already used
    delete:
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
      summary: Delete user by id
      tags:
      - Admin
      - Account
      security:
      - BearerAuth: []
      responses:
        '200':
          description: User was deleted successfully
        '403':
          description: You are not admin
        '404':
          description: This user not found
  "/Admin/Transport":
    get:
      summary: Get transport list
      tags:
      - Admin
      - Transport
      security:
      - BearerAuth: []
      parameters:
      - name: start
        in: header
        required: true
        schema:
          type: integer
      - name: count
        in: header
        required: true
        schema:
          type: integer
      - name: transportType
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Transport's list
        "401":
          description: Not valid token/not authorized
        "403":
          description: You are not admin
    post:
      summary: Create transport
      tags:
      - Admin
      - Transport
      security:
      - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ownerID:
                  type: string
                canBeRented:
                  type: boolean
                transportType:
                  type: string
                model:
                  type: string
                color:
                  type: string
                identifier:
                  type: string
                description:
                  type: string
                latitude:
                  type: number
                  format: float
                longitude:
                  type: number
                  format: float
                minutePrice:
                  type: number
                  format: float
                dayPrice:
                  type: number
                  format: float
      responses:
        "200":
          description: Transport created
        "401":
          description: Not valid token/not authorized
        "403":
          description: You are not admin
              
  "/Admin/Transport/{transport_id}":
    get:
      security:
      - BearerAuth: []
      parameters:
      - name: transport_id
        in: path
        required: true
        schema:
          type: string
      summary: Get transport data by id
      tags:
      - Admin
      - Transport
      responses:
        "200":
          description: Successfully got transport data
        "401":
          description: Not valid token/not authorized
        "403":
          description: You are not admin
        "404":
          description: This transport is not found
          
    put:
      parameters:
      - name: transport_id
        in: path
        required: true
        schema:
          type: string
      summary: Update transport data by id
      tags:
      - Admin
      - Transport
      security:
      - BearerAuth: []
      requestBody:
        required: True
        content:
          application/json:
            schema:
              type: object
              properties:
                ownerID:
                  type: string
                canBeRented:
                  type: boolean
                transportType:
                  type: string
                model:
                  type: string
                color:
                  type: string
                identifier:
                  type: string
                description:
                  type: string
                latitude:
                  type: number
                  format: float
                longitude:
                  type: number
                  format: float
                minutePrice:
                  type: number
                  format: float
                dayPrice:
                  type: number
                  format: float
      responses:
        '200':
          description: Transport updated successfully
        '403':
          description: You are not admin
        '401':
          description: Not valid token/not authorized
        "404":
          description: Transport not found
    delete:
      parameters:
      - name: transport_id
        in: path
        required: true
        schema:
          type: string
      summary: Delete transport by id
      tags:
      - Admin
      - Transport
      security:
      - BearerAuth: []
      responses:
        '200':
          description: Transport was deleted successfully
        '403':
          description: You are not admin
        '404':
          description: This transport not found
  "/Admin/Rent/{rent_id}":
    get:
      summary: Get rent data
      tags:
      - Admin
      - Rent
      security:
      - BearerAuth: []
      parameters:
      - name: rent_id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Rent data
        "401":
          description: Not valid token/not authorized
        "403":
          description: You are not admin
        "404":
          description: Rent not found
    put:
      summary: Update rent data
      tags:
      - Admin
      - Rent
      security:
      - BearerAuth: []
      parameters:
      - name: rent_id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transportID:
                  type: string
                userID:
                    type: string
                timeStart:
                  type: string
                timeEnd:
                  type: string
                priceOfUnit:
                  type: number
                  format: float
                priceType:
                  type: string
                finalPrice:
                  type: number
                  format: float
      responses:
        "200":
          description: Rent data was updated
        "401":
          description: Not valid token/not authorized
        "403":
          description: You are not admin
        "404":
          description: Rent not found
  "/Admin/UserHistory/{user_id}":
    get:
      summary: Get user's rent history
      tags:
      - Admin
      - Rent
      security:
      - BearerAuth: []
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: User's rent history
        "401":
          description: Not valid token/not authorized
        "403":
          description: You are not admin
        "404":
          description: User's rent history not found (or user does not exist)
  "/Admin/TransportHistory/{transport_id}":
    get:
      summary: Get user's rent history
      tags:
      - Admin
      - Rent
      security:
      - BearerAuth: []
      parameters:
      - name: transport_id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Transport's rent history
        "401":
          description: Not valid token/not authorized
        "403":
          description: You are not admin
        "404":
          description: Transport's rent history not found (or transport does not exist)
  "/Admin/Rent":
    post:
      summary: Add rent to the database
      tags:
      - Admin
      - Rent
      security:
      - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transportID:
                  type: string
                userID:
                  type: string
                timeStart:
                  type: string
                timeEnd:
                  type: string
                priceOfUnit:
                  type: number
                  format: float
                priceType:
                  type: string
                finalPrice:
                  type: number
                  format: float
      responses:
        "200":
          description: Added successfully
        "401":
          description: Not valid token/not authorized
        "403":
          description: You are not admin
  "/Admin/Rent/End/{rent_id}":
    post:
      summary: End rent by id
      tags:
      - Admin
      - Rent
      parameters:
      - name: rent_id
        in: path
        required: true
        schema:
          type: string
      security:
      - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lat:
                  type: number
                  format: float
                long:
                  type: number
                  format: float
      responses:
        "200":
          description: Rent was ended
        "401":
          description: Not valid token/not authorized
        "403":
          description: You are not admin
        "404":
          description: Rent not found
        "409":
          description: Rent have already been ended
        "502":
          description: Wrong rent type in the database
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      
      
      
      
      
      
      
      
      